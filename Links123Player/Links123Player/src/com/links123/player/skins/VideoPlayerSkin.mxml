<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark VideoPlayer component.  

@see spark.components.VideoPlayer

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabledStates="0.5" 
			 chromeColor.fullScreenStates="0xCCCCCC"   xmlns:components="com.links123.player.components.*" xmlns:controls="com.exsky.controls.*">
	<!-- A chrome color of 0xCCCCCC in the fullScreenStates means we ignore the chromeColor property 
	all together as 0xCCCCCC is essentially just a no-op color transform -->
	
	<!-- host component -->
	<fx:Metadata>
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("com.links123.player.components.VideoPlayer")]
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			/* Define the skin elements that should not be colorized. */
			static private const exclusions:Array = ["videoDisplay","introWordPanel","scorepanel","musiccon","recordbtn","endrecordbtn", "playPauseButton","wordshow","scrubBar", 
				"currentTimeDisplay", "timeDivider", "durationDisplay","loading","loadfail",
				"volumeBar", "fullScreenButton","controlbg","pausecon","pologizebtn","chinese","goonplaybtn"];
			
			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor = true;
				super.initializationComplete();
			}
			
			/**
			 * @private
			 */
			override public function get colorizeExclusions():Array 
			{
				return exclusions;
			}
			
			/**
			 * @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				dropShadow.visible = getStyle("dropShadowVisible");
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
		]]>
		
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="uninitialized" stateGroups="uninitializedStates, normalStates" />
		<s:State name="loading" stateGroups="loadingStates, normalStates" />
		<s:State name="ready" stateGroups="readyStates, normalStates" />
		<s:State name="playing" stateGroups="playingStates, normalStates" />
		<s:State name="paused" stateGroups="pausedStates, normalStates" />
		<s:State name="buffering" stateGroups="bufferingStates, normalStates" />
		<s:State name="playbackError" stateGroups="playbackErrorStates, normalStates" />
		<s:State name="disabled" stateGroups="disabledStates, normalStates"/>
		<s:State name="uninitializedAndFullScreen" stateGroups="uninitializedStates, fullScreenStates" />
		<s:State name="loadingAndFullScreen" stateGroups="loadingStates, fullScreenStates" />
		<s:State name="readyAndFullScreen" stateGroups="readyStates, fullScreenStates" />
		<s:State name="playingAndFullScreen" stateGroups="playingStates, fullScreenStates" />
		<s:State name="pausedAndFullScreen" stateGroups="pausedStates, fullScreenStates" />
		<s:State name="bufferingAndFullScreen" stateGroups="bufferingStates, fullScreenStates" />
		<s:State name="playbackErrorAndFullScreen" stateGroups="playbackErrorStates, fullScreenStates" />
		<s:State name="disabledAndFullScreen" stateGroups="disabledStates, fullScreenStates"/>
	</s:states>
	
	<!-- drop shadow -->
	<!--- @private -->
	<s:RectangularDropShadow id="dropShadow" blurX="17" blurY="17" alpha="0.32" distance="4" 
							 angle="90" color="#131313" left="0" top="0" right="0" bottom="0" 
							 excludeFrom="fullScreenStates"/>
	
	<!--- Video and player controls are clipped if they exceed the size of the 
	component, but the drop shadow above is not clipped and sizes to the component.
	We also set verticalScrollPosition so that when we do clip, rather than clipping  
	off the bottom first, we clip off the top fist.  This is so the player controls 
	are still visible when we start clipping. -->
	<s:Group id="clippedGroup" clipAndEnableScrolling="true" left="0" top="0" right="0" bottom="0" 
			 verticalScrollPosition="{Math.max(0, 184-clippedGroup.height)}">
		
		<s:Group minWidth="263" minHeight="184" left="0" right="0" top="0" bottom="0">
			<s:Rect bottom="1" left="1" right="1" top="1"
					bottom.fullScreenStates="0" left.fullScreenStates="0" 
					right.fullScreenStates="0" top.fullScreenStates="0">
				<s:fill>
					<s:SolidColor color="0x000000" />
				</s:fill>
			</s:Rect>
			
			<components:VideoDisplay id="videoDisplay" bottom="40" left="1" right="1" top="1"
							bottom.fullScreenStates="0" left.fullScreenStates="0" 
							right.fullScreenStates="0" top.fullScreenStates="0" />
	        
			
			<s:Group id="pausecon" bottom="38" left="1" right="1" top="1">
				<s:ToggleButton doubleClickEnabled="true" mouseEnabled="true" id="playPauseButton" bottom="1" left="1" right="1" top="1"  visible="false"
								skinClass="com.links123.player.skins.PlayPauseButtonSkin" 
								skinClass.fullScreenStates="com.links123.player.skins.PlayPauseButtonSkin"
								focusIn="event.target.depth=1" focusOut="event.target.depth=0" />
			</s:Group>
			
			<s:Group id="recordcon"  bottom="38" left="1" right="1" top="1">
				<s:Button id="recordbtn" label="开始录音" verticalCenter="0" horizontalCenter="-25" buttonMode="true" skinClass="com.links123.player.skins.RecordButtonSkin" visible="false">
				</s:Button>
				<s:Button id="goonplaybtn" label="继续" horizontalCenter="75" verticalCenter="0" buttonMode="true" skinClass="com.links123.player.skins.GOONButtonSkin" visible="false">
				</s:Button>
				<s:Button id="endrecordbtn" label="结束录音" verticalCenter="0" horizontalCenter="50" buttonMode="true" skinClass="com.links123.player.skins.EndRecordButtonSkin" visible="false">
				</s:Button>
				<s:Button id="pologizebtn" label="语音分析" verticalCenter="0" horizontalCenter="60" buttonMode="true" skinClass="com.links123.player.skins.PologizeButtonSkin" visible="false">
				</s:Button>
			</s:Group>
			
			<!--- 字幕显示容器 -->
			<s:Group visible="false" right="0" left="0" height="72" id="wordshow">
				<s:Rect bottom="1" left="1" right="1" top="18" alpha="0.7"
						bottom.fullScreenStates="0" left.fullScreenStates="0" 
						right.fullScreenStates="0" top.fullScreenStates="0">
					<s:fill>
						<s:SolidColor color="0x000000" />
					</s:fill>
				</s:Rect>
				<s:Group  id="chinesebtn" right="5" buttonMode="true">
					<controls:FlexMovieClip source="{new PLAYER_CHINESE_LOGO()}">
					</controls:FlexMovieClip>
				</s:Group>
				<s:Group  id="englishbtn" right="35" buttonMode="true">
					<controls:FlexMovieClip source="{new PLAYER_ENGLISH_LOGO()}">
					</controls:FlexMovieClip>
				</s:Group>
				<controls:FlexMovieClip source="{new PLAYER_CLOSE_WORD()}" buttonMode="true" id="closebtn" right="5" top="20">
				</controls:FlexMovieClip>
				<s:HGroup right="0" bottom="0" left="0" top="20" horizontalAlign="center" verticalAlign="middle" textAlign="left">
					<controls:FlexMovieClip source="{new PLAYER_PREV_BUTTON()}" buttonMode="true" id="prevbtn">
					</controls:FlexMovieClip>
					<s:Group>
						<s:VGroup id="wordCon" gap="0" top="0" right="0" left="0" bottom="0" verticalAlign="middle">
						</s:VGroup>
						<s:Label visible="false" id="chinese" fontWeight="bold" color="0xffffff" fontSize="18" fontFamily="黑体"
								 textAlign="center" maxDisplayedLines="1"
								 horizontalCenter="0" verticalCenter="1" verticalAlign="middle">
						</s:Label>
					</s:Group>
					<controls:FlexMovieClip source="{new PLAYER_NEXT_BUTTON()}" buttonMode="true" id="nextbtn">
					</controls:FlexMovieClip>
				</s:HGroup>
			</s:Group>
			
			<!--- 音频播放器容器 -->
			<s:Group id="musiccon" bottom="1" left="1" right="1" top="1" bottom.fullScreenStates="0" left.fullScreenStates="0" right.fullScreenStates="0" top.fullScreenStates="0">
			</s:Group>
			
			<!--- 单词说明面板 -->
			<components:IntroWordPanel id="introWordPanel" visible="false" right="0" left="0" minHeight="150" top="0" bottom="90">
			</components:IntroWordPanel>
			
			<!--- 得分面板 -->
			<components:ScorePanel id="scorepanel" right="0" left="0" minHeight="150" top="0" bottom="90" visible="false">
			</components:ScorePanel>
			
			<!--- 加载失败 -->
			<s:Group top="1" right="1" left="1" bottom="38" id="loadfail" visible="false">
				<s:Rect bottom="1" left="1" right="1" top="1" alpha="0.5"
						bottom.fullScreenStates="0" left.fullScreenStates="0" 
						right.fullScreenStates="0" top.fullScreenStates="0">
					<s:fill>
						<s:SolidColor color="0x000000" />
					</s:fill>
				</s:Rect>
				<s:Label text="播放失败,请重新刷新页面..." fontSize="24" color="0xffffff" verticalCenter="0" horizontalCenter="0">
				</s:Label>
			</s:Group>
			
			<!--- 加载动画 -->
			<s:Group top="1" right="1" left="1" bottom="38" id="loading" visible="false">
				<controls:FlexMovieClip source="{new PLAYER_LOADING_MOVIE()}" verticalCenter="44" horizontalCenter="44">
				</controls:FlexMovieClip>
			</s:Group>
			
			<!-- video player controls -->
			<s:Group left="0" right="0" height="40" bottom="0">
				
				<!-- actual controls with a maxWidth in non-fullScreen mode -->
				<!--- @copy spark.components.VideoPlayer#playerControls -->
				<s:Group bottom="0" horizontalCenter="0" left="0" right="0" id="playerControls" height="40">
					<s:Group id="controlbg" left="0" right="0" top="0" bottom="0" >
						<controls:FlexMovieClip source="{new PLAYER_CONTROLBAR_MIDDLE}" left="0" right="0" top="0" bottom="0">
						</controls:FlexMovieClip>
						<controls:FlexMovieClip source="{new PLAYER_CONTROLBAR_LEFT()}" left="0" top="0" bottom="0">
						</controls:FlexMovieClip>
						<controls:FlexMovieClip source="{new PLAYER_CONTROLBAR_RIGHT()}" right="0" top="0" bottom="0">
						</controls:FlexMovieClip>
					</s:Group>
					
					<!--- @copy spark.components.VideoPlayer#scrubBar -->
					<components:ScrubBar id="scrubBar" snapInterval=".01" stepSize=".01" right="100" left="70" height="30" verticalCenter="9" liveDragging="true"
										 skinClass="com.links123.player.skins.ScrubBarSkin"
										 skinClass.fullScreenStates="com.links123.player.skins.ScrubBarSkin" />
					
					<s:Group left="0" top="0" bottom="0">
						<s:Group left="0" right="0" height="23" verticalCenter="0">
							<s:layout>
								<s:HorizontalLayout verticalAlign="middle" gap="1" />
							</s:layout>
							<s:Rect width="7" height="1" />
							<!--- @copy spark.components.VideoPlayer#currentTimeDisplay -->
							<s:Label id="currentTimeDisplay" fontWeight="bold" color.fullScreenStates="0xFFFFFF" />
							<!--- @private -->
							<s:Label id="timeDivider" text="/" fontWeight="bold" color.fullScreenStates="0xFFFFFF" />
							<!--- @copy spark.components.VideoPlayer#durationDisplay -->
							<s:Label id="durationDisplay" fontWeight="bold" color.fullScreenStates="0xFFFFFF" />
							<s:Rect width="8" height="1" />
						</s:Group>
						
					</s:Group>
					
					<!--- @copy spark.components.VideoPlayer#volumeBar -->
					<s:VolumeBar id="volumeBar" snapInterval=".01" stepSize=".01" liveDragging="true"
								 right="20" verticalCenter="0" 
								 skinClass="com.links123.player.skins.VolumeBarSkin"
								 skinClass.fullScreenStates="com.links123.player.skins.VolumeBarSkin"
								 focusIn="event.target.depth=1" focusOut="event.target.depth=0" />
					
					<!--- @copy spark.components.VideoPlayer#fullScreenButton -->
					<s:Button id="fullScreenButton" right="0" bottom="0" verticalCenter="0" width="42" height="30" label="Fullscreen" 
							  skinClass="com.links123.player.skins.FullScreenButtonSkin"
							  skinClass.fullScreenStates="com.links123.player.skins.FullScreenExitButtonSkin"
							  focusIn="event.target.depth=1" focusOut="event.target.depth=0" />
				</s:Group>
				
			</s:Group>
			
			<s:Rect left="0" right="0" top="0" bottom="0" excludeFrom="fullScreenStates">
				<s:stroke>
					<s:SolidColorStroke color="0x131313" />
				</s:stroke>
			</s:Rect>
		</s:Group>
	</s:Group>
</s:SparkSkin>
